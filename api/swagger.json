{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Book A Meal App",
    "description": "This is an app that allow connect customers with food vendors. A link to the app [https://bookamealapp.herokuapp.com](here)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "olayinka.raheem16@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "swagger.io/book-a-meal-app",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API Endpoints for users on the system"
    },
    {
      "name": "Caterers",
      "description": "API Endpoints for Caterers on the system"
    },
    {
      "name": "Meals",
      "description": "API Endpoints to access Meals on the system"
    },
    {
      "name": "Menus",
      "description": "API Endpoints to access menu options on the system"
    },
    {
      "name": "Orders",
      "description": "API Endpoints to place orders and access orders information on the system"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Register a New User in the system",
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of User"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of User"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "Phone Number of User"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of User"
                  },
                  "role": {
                    "type": "integer",
                    "default": 3,
                    "description": "access role of the normal user."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is registered"
          },
          "400": {
            "description": "User Registration Validation Error"
          },
          "500": {
            "description": "User Already Registred"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Log In a Registered User",
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of Registered User"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of Registered User"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Logged In"
          },
          "400": {
            "description": "User Login Validation Error"
          },
          "500": {
            "description": "User Does Not Exist"
          }
        }
      }
    },
    "/api/v1/auth/signup{caterer}": {
      "post": {
        "tags": [
          "Caterers"
        ],
        "description": "Register a New Caterer in the system",
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Caterer"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of Caterer"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "Phone Number of Caterer"
                  },
                  "restaurant_name": {
                    "type": "string",
                    "description": "Name of Catering service"
                  },
                  "restaurant_logo": {
                    "type": "string",
                    "description": "Logo of Catering service"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of Caterer"
                  },
                  "role_id": {
                    "type": "string",
                    "description": "role of Caterer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New Caterer is registered"
          },
          "400": {
            "description": "Caterer Registration Validation Error"
          },
          "500": {
            "description": "Caterer Already Registred"
          }
        }
      }
    },
    "/api/v1/meals/": {
      "get": {
        "summary": "Get all meals for logged in caterer",
        "tags": [
          "meals"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logged In Caterer's Meals"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "summary": "Add New Meal to the system",
        "tags": [
          "meals"
        ],
        "requestBody": {
          "description": null,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of new Meal"
                  },
                  "price": {
                    "type": "string",
                    "description": "Price of new Meal"
                  },
                  "image": {
                    "type": "string",
                    "description": "Image of new Meal"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New Meal Created"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/meals/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of meal that we want to work with",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete Meal with given ID",
        "tags": [
          "meals"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meal Deleted"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "summary": "Modify Meal with given ID",
        "tags": [
          "meals"
        ],
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name of Meal"
                  },
                  "price": {
                    "type": "string",
                    "description": "New price of Meal"
                  },
                  "image": {
                    "type": "string",
                    "description": "New image of Meal"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meal Updated"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          },
          "500": {
            "description": "Meal with given ID does nor exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/menu/": {
      "get": {
        "summary": "Get all menus from all caterers",
        "tags": [
          "Menus"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All Menus Retrieved"
          },
          "401": {
            "description": "Only Authenticated Users are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "summary": "Add New Meal to Menu in the system",
        "tags": [
          "Menus"
        ],
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meal_id": {
                    "type": "array of integers",
                    "description": "ID of Meal to be Added"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meals Added to Menu"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/menu/caterer": {
      "get": {
        "summary": "Get Menu for Logged In Caterer",
        "tags": [
          "Menus"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Caterer's Menu Retrieved"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/orders": {
      "get": {
        "summary": "Get all orders to Logged In Caterer",
        "tags": [
          "Orders"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All Orders Retrieved"
          },
          "401": {
            "description": "Only Authenticated Caterers are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "summary": "Add Meal to OrderItems of Logged In User in the system",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meal_id": {
                    "type": "string",
                    "description": "ID of Meal to be Added"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity of Meal to order"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Meal Added to Order Items"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Users are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/orders/user": {
      "get": {
        "summary": "Get Order Items for Logged In User",
        "tags": [
          "Orders"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's Order Items Retrieved"
          },
          "401": {
            "description": "Only Authenticated Users are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/orders/{order_id}": {
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "description": "ID of order item we want to work with",
          "type": "integer"
        }
      ],
      "put": {
        "summary": "Update Order Item with give ID",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action to be carried out (increase, decrease or delete)"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order Item Updated"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Users are Authorized"
          },
          "500": {
            "description": "Order Item With Given ID does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/orders/checkout": {
      "post": {
        "summary": "Checkout Orders",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "description": "Input Data Format",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delivery_address": {
                    "type": "string",
                    "description": "Address for Order Delivery"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order Made"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Only Authenticated Users are Authorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  }
}